Git 기초 개념

git이 파일을 관리하는 단위는 디렉토리(폴더)임

특정폴더를 저장소(repository)로 지정하면 해당폴더에 지정되는 파일과 하위 폴더들이 git이 관리하는 대상이 됨

*작업의 흐름
작업 디렉토리는 실제파일로 이루어져있고, 인덱스는 준비하는 역할이며 HEAD는 최종 확정본임

*추가와 확정(Commit)
1.변경된 파일은 get add 파일이름을 가지고 인덱스에 추가할 수 있음
+실제 변경 내용을 확정하려면
git commit -m “이번 확정본에 대한 설명”이라는 명령어를 내려야함
===>여기까지 하면 변경된 파일이 HEAD에 반영됨 But 원격 저장소에는 반영 x.

*변경내용 발행(push)하기
번경내용을 원격 서버로 올리기 위해서는
git push origin master이라는 명령을 실행함
(다른가지를 발생하려면 master를 원하는 가지이름으로 바꾸기)
만약 기존 원격저장소를 복제하는 것이 아니면 원격 서버 주소를 git에게 알려 줘야 함
git remote add origin 원격서버주소를 통해

*branch가지치기
새로 저장소를 만들면 master 가지가 만들어지고 다른가지를 이용해 개발을 진행하며 나중에 개발이 완료되면 master가지로 돌아와 병합함
git checkout -b feature_x : feature_x라는 이름의 가지를 만들어 갈아탐
git checkout master : master가지로 돌아옴
git branch -d feature_x : 가지 삭제
git push origin 가지이름 : 새로만든 가지를 원격 저장소로 전송하기 전까지는 다른사람이 접근 불가

*갱신과 병합(merge)
로컬 저장소를 원격 저장소에 맞춰 갱신하려면 git pull을 실행함
이러면 원격저장소의 변경 내용이 로컬 작업 디렉토리에 받아지고, 병합됨
다른 가지에 있는 변경 내용을 현재 가지(예를 들면, master 가지)에
병합하려면 git merge 가지 이름 명령 실행
충돌이 일어날때에는 직접 수정해 병합니 가능하도록 해야함
git add 파일 이름 :  git에세 아까의 파일 병합해
git diff 원래가지 비교대상가지 : 변경 내용 병합 전 어떻게 바뀌었는지 비교
*꼬리표 달기 
git tag 1.0.0 1b2e1d63ff 로 꼬리표 1.0.0 달 수 있음
git log이용해 확정본 식별자 얻을 수 있음

*로컬 변경 내용 되돌리기
실수로 뭔가 잘못해서 되돌려야 될 경우
git checkout -- 파일이름을 실시하면 로컬 변경내용을 변경전 상태 HEAD로 되돌려줌
(이미 인덱스에 추가된 변경 내용과 새로 생성한 파일은 그대로 남음)

만약 로컬 모든 변경 내용과 확정본 포기하려면 
git fetch origin
git reset --hard origin/master 명령을 가지고 원격 저장소의ㅣ 최신 이력을 가져옴
로컬 master가지가 저이력을 가리키도록 할 수 있음


*팁
gitk : git의 내장 GUI
git config color.ui true : 콘솔에서 git output을 컬러로 출력
git config format.pretty oneline : 이력(log)에서 확정본 1개를 딱 한 줄로만 표시
git add -i : 파일 추가때 마다 대화식으로 추가하기

 






